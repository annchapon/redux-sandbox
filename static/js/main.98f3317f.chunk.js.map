{"version":3,"sources":["counter.js","reducer.js","actions.js","index.js"],"names":["Counter","counter","inc","dec","rnd","className","onClick","reducer","state","action","type","payload","store","createStore","dispatch","bindActionCreators","actions","update","ReactDOM","render","getState","value","Math","floor","random","document","getElementById","subscribe"],"mappings":"+RAyBeA,EAvBC,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACpC,OACE,sBAAKC,UAAU,YAAf,UACE,6BAAKJ,IACL,wBACEK,QAASH,EACTE,UAAU,yBAFZ,iBAKA,wBACEC,QAASJ,EACTG,UAAU,yBAFZ,iBAKA,wBACEC,QAASF,EACTC,UAAU,yBAFZ,qBCASE,EAhBC,WAAwB,IAAvBC,EAAsB,uDAAd,EAAGC,EAAW,uCACrC,OAAQA,EAAOC,MACb,IAAK,MACH,OAAOF,EAAQ,EAEjB,IAAK,MACH,OAAOA,EAAQ,EAEjB,IAAK,MACH,OAAOA,EAAQC,EAAOE,QAExB,QACE,OAAOH,ICZAN,EAAM,iBAAO,CAAEQ,KAAM,QAErBP,EAAM,iBAAO,CAAEO,KAAM,QAErBN,EAAM,SAACO,GAAD,MAAc,CAAED,KAAM,MAAOC,YCK1CC,EAAQC,YAAYN,GAClBO,EAAaF,EAAbE,SAER,EACEC,YAAmBC,EAASF,GADtBZ,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IAAKC,EAAlB,EAAkBA,IAGZa,EAAS,WACbC,IAASC,OACP,cAAC,EAAD,CACElB,QAASW,EAAMQ,WACflB,IAAKA,EACLC,IAAKA,EACLC,IAAK,WACH,IAAMiB,EAAQC,KAAKC,MAAoB,GAAdD,KAAKE,UAC9BpB,EAAIiB,MAERI,SAASC,eAAe,UAG5BT,IACAL,EAAMe,UAAUV,K","file":"static/js/main.98f3317f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Counter = ({ counter, inc, dec, rnd }) => {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h2>{counter}</h2>\r\n      <button \r\n        onClick={dec}\r\n        className=\"btn btn-primary btn-lg\">\r\n        DEC\r\n      </button>\r\n      <button \r\n        onClick={inc}\r\n        className=\"btn btn-primary btn-lg\">\r\n        INC\r\n      </button>\r\n      <button \r\n        onClick={rnd}\r\n        className=\"btn btn-primary btn-lg\">\r\n        RND\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;","const reducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case 'INC': \r\n      return state + 1;\r\n\r\n    case 'DEC':\r\n      return state - 1;\r\n\r\n    case 'RND':\r\n      return state + action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","export const inc = () => ({ type: 'INC' });\r\n\r\nexport const dec = () => ({ type: 'DEC' });\r\n\r\nexport const rnd = (payload) => ({ type: 'RND', payload });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, bindActionCreators } from 'redux';\n\nimport Counter from './counter';\n\nimport reducer from './reducer';\nimport * as actions from './actions';\n\nconst store = createStore(reducer);\nconst { dispatch } = store;\n\nconst { inc, dec, rnd } = \n  bindActionCreators(actions, dispatch);\n\nconst update = () => {\n  ReactDOM.render(\n    <Counter \n      counter={store.getState()} \n      inc={inc} \n      dec={dec} \n      rnd={() => {\n        const value = Math.floor(Math.random()*10);\n        rnd(value);\n      }} />, \n    document.getElementById('root'));\n};\n\nupdate();\nstore.subscribe(update);"],"sourceRoot":""}